---
- name: Debug env vars
  ansible.builtin.debug:
    msg: "'{{ lookup('ansible.builtin.env', 'TYPEORM_DATABASE') }}' is the TYPEORM_DATABASE"
  # Get the environment variables from CircleCI
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT')}}"
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

- name: "install python3"
  become: yes
  ansible.builtin.apt:
    name: "python3"
    state: present

- name: "update apt packages"
  become: yes
  ansible.builtin.apt:
    update_cache: yes

- name: "upgrade packages"
  become: yes
  ansible.builtin.apt:
    upgrade: yes

- name: "remove old dependencies"
  become: yes
  ansible.builtin.apt:
    autoremove: yes

- name: "install dependencies"
  become: yes
  ansible.builtin.apt:
    name: ["nodejs", "npm"]
    state: latest
    update_cache: yes

- name: "install pm2"
  become: yes
  npm:
    name: pm2
    global: yes
    production: yes
    state: present
